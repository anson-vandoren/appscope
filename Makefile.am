#
# Cribl AppScope - Autoconf Input
#
# See docs/BUILD.md for details.
#

# Recurse into subdirectories in this order
SUBDIRS = contrib src cli test

# Track Libtool dependencies to keep it updated
LIBTOOL_DEPS = @LIBTOOL_DEPS@
libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status libtool

# Quiet a warning...
ACLOCAL_AMFLAGS = -I m4

# List additional leftovers to clean up.
#
# Ideally, the `maintainer-clean` target should remove anything generated by
# the build-system
maintainer-clean-local:
	$(RM) -r aclocal.m4 compile config.h config.h.in config.h.in~ config.log config.status configure depcomp install-sh m4 Makefile.in missing stamp-h1 ar-lib config.guess config.sub ltmain.sh
.PHONY: maintainer-clean-local

DOCKER_TAG ?= "appscope-builder"

docker-build-image: BUILD_ARGS ?=
docker-build-image: DOCKER := $(shell which docker 2>/dev/null)
docker-build-image: 
	@[ -x "$(DOCKER)" ] || \
		{ echo >&2 "error: Please install Docker first."; exit 1; }
	@$(DOCKER) build \
		--tag $(DOCKER_TAG) \
		-f docker/builder/Dockerfile \
		--build-arg UID=$(shell id -u) \
		--build-arg GID=$(shell id -g) \
		$(BUILD_ARGS) .
.PHONY: docker-build-image

docker-build: DOCKER := $(shell which docker 2>/dev/null)
docker-build: docker-build-image
	@[ -x "$(DOCKER)" ] || \
		{ echo >&2 "error: Please install Docker first."; exit 1; }
	@$(DOCKER) run -it --rm \
		-v "$(shell pwd):/opt/appscope" \
		--user $(shell id -u):$(shell id -g) \
		--entrypoint /bin/bash \
		$(DOCKER_TAG) \
		-c "./bootstrap && make -j8 all && make check"
.PHONY: docker-build

docker-run: DOCKER := $(shell which docker 2>/dev/null)
docker-run: docker-build-image
	@[ -x "$(DOCKER)" ] || \
		{ echo >&2 "error: Please install Docker first."; exit 1; }
	@$(DOCKER) run -it --rm \
		-v "$(shell pwd):/opt/appscope" \
		--user $(shell id -u):$(shell id -g) \
		$(DOCKER_TAG)
.PHONY: docker-run

# Support the old target for unit-testing
test: check
.PHONY: test
