dnl
dnl Cribl AppScopeâ„¢ - Autoconf Input
dnl
dnl See docs/BUILD.md for details.
dnl

dnl This is run through Autoconf to produce the `configure` script.

dnl PACKAGE and VERSION details
AC_INIT([appscope], [m4_esyscmd_s([git describe --abbrev=12 --dirty=+ --always --tags])])

dnl Enable Automake
dnl
dnl Note: Had to add "subdir-objects" due to the way sources from `os/` and
dnl `contrib/` appear on the SOURCES lists. Also had to remove "-Werror" for
dnl the use of pon-portable $(wildcard ...) there too. Hopefully we can clean
dnl this up later.
dnl
dnl AM_INIT_AUTOMAKE([foreign -Wall -Wno-override -Werror])
AM_INIT_AUTOMAKE([foreign subdir-objects -Wall -Wno-override])

dnl Detect Host OS
dnl
dnl Note: We can replace the non-standard __LINUX__ and __MACOS__ macros with
dnl       __linux__ (lowercase) and __APPLE__ which gcc sets automatically.
dnl
dnl The AM_CONDITIONAL's make LINUX and MACOS available in Makefile.am.
dnl
AC_CANONICAL_HOST
build_linux=no
build_macos=no
case "${host_os}" in
    linux*)
        AC_DEFINE([__LINUX__], 1, [Define if host OS is Linux.])
	CFLAGS="${CFLAGS} -D__LINUX__"
	build_linux=yes
        ;;
    darwin*)
        AC_DEFINE([__MACOS__], 1, [Define if host OS is MacOS.])
	CFLAGS="${CFLAGS} -D__MACOS__"
	build_macos=yes
        ;;
    *)
        AC_MSG_ERROR(["Host OS $host_os is not supported"])
        ;;
esac
AM_CONDITIONAL([LINUX], [test "$build_linux" = "yes"])
AM_CONDITIONAL([MACOS], [test "$build_macos" = "yes"])

dnl Check for some required programs
AC_PROG_CC
AM_PROG_AR
AM_PROG_AS
AC_PATH_PROGS([DOCKER], [docker podman])
AC_PATH_PROG([GO], [go])
AC_PATH_PROGS([OBJCOPY], [objcopy gobjcopy])
AC_PATH_PROG([CMAKE], [cmake])

dnl Require some programs
if test x"${GO}" == x"" ; then
    AC_MSG_ERROR([Please install golang.])
fi
if test x"${OBJCOPY}" == x"" ; then
    AC_MSG_ERROR([Please install objcopy; i.e. the binutils package.])
fi
if test x"${CMAKE}" == x"" ; then
    AC_MSG_ERROR([Please install cmake.])
fi

dnl Extras derived from programs
AM_CONDITIONAL(HAVE_DOCKER, test -n "$DOCKER")
AM_CONDITIONAL(HAVE_GO, test -n "$GO")
gopath=$($GO env | grep GOPATH | cut -d\" -f2)
AC_SUBST([GOPATH], $gopath)

dnl Enable Libtool
dnl
dnl The `pic-only` option here should force -fPIC -DPIC everywhere.
LT_INIT([pic-only])
AC_SUBST([LIBTOOL_DEPS])

dnl Setup M4 Macros
AC_CONFIG_MACRO_DIRS([m4])

dnl DEBUG mode
AC_ARG_ENABLE(debug,
    AS_HELP_STRING([--enable-debug], [enable debugging, default: no]),
    [case "${enableval}" in
        yes) debug=true ;;
        no)  debug=false ;;
        *)   AC_MSG_ERROR([bad value ${enableval} for --enable-debug]) ;;
    esac],
    [debug=false]
)

AM_CONDITIONAL(DEBUG, test x"$debug" = x"true")


dnl Create config.h
AC_CONFIG_HEADERS([config.h])

dnl Process the Makefile templates generated by Automake
AC_CONFIG_FILES([Makefile src/Makefile cli/Makefile test/Makefile])

dnl Finish up
AC_OUTPUT
